---
title: "Data of members of Toronto City Council - Voting Recorde"
author: 
  - Che-Yu Wang
thanks: "Code and data are available at: https://github.com/Cheyuwang/Toronto-data-analysis-/tree/main/input%20/skatches."
date: 2024/01/22
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

### Working setup
#install.packages("here")

#### Acquire #### 
library(tidyverse)
library(janitor) # Load the 'janitor' library for 'clean_names()'

# Data sources 2.3.3 https://tellingstorieswithdata.com/02-drinking_from_a_fire_hose.html 

# Regenerate the dataset by each person's voting results 
# Load the data and show the column names
voting_record <- read_csv(
  here::here("outputs/data/processed_voting_record_clean.csv"), # Correct usage of 'here' function
  show_col_types = FALSE
) # Added closing parenthesis
colnames(voting_record)

# Clean and transform the data
voting_record_clean <- 
  voting_record %>%
  clean_names()

# Display the cleaned data
head(voting_record_clean)

# Write the cleaned data to a new CSV file
write_csv(
  x = voting_record_clean, # Use the cleaned data
  file = "processed_voting_record_clean.csv"
)

```


# Introduction

You can and should cross-reference sections and sub-sections. 

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}

We then create a summary statistic on the basis of monthly groups, using summarise() from dplyr. We use kable() from knitr to create Table 2.1. 

```{r}


library(knitr)




# View a few entries of the Date/Time column
print(head(voting_record$`Date/Time`))

# Replace 'correct_date_parsing_function' with the appropriate function from lubridate
voting_record_clean <- voting_record %>%
  mutate(month_column = month(correct_date_parsing_function(`Date/Time`), label = TRUE, abbr = FALSE)) %>%
  group_by(month_column) %>%
  summarise(votes_count = n()) %>%
  kable()

# Print the table
print(voting_record_clean)

```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false
library(tidyverse)

# Load the data
voting_record <- read_csv("outputs/data/processed_voting_record_clean.csv", show_col_types = FALSE)

# Process the data - adjust this part based on your dataset
# Assuming there are columns named 'First Name', 'Last Name', and 'Vote'
voting_summary <- voting_record %>%
  unite("Member", `First Name`, `Last Name`, sep = " ") %>%
  filter(Vote == "Yes") %>%
  count(Member)

# Create the bar chart
ggplot(voting_summary, aes(x = Member, y = n)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(
    title = "Count of 'Yes' Votes by Toronto City Council Members",
    x = "Council Member",
    y = "Number of 'Yes' Votes"
  ) +
  theme_minimal() 

```

Talk way more about it. 












\newpage

\appendix

# Appendix {-}


# Additional data details





\newpage


# References


